name: "Build"

on:
  pull_request:
  push:
    branches:
      - "master"
  schedule:
    - cron: "0 8 * * 1" # At 08:00 on Monday

jobs:
  qa:
    name: "Quality Assurance"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        php-version:
          - "7.4"
        operating-system: [ubuntu-latest]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@1.8.2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Validate Composer"
        run: "composer validate"

      - name: "Cache dependencies"
        uses: "actions/cache@v1.1.2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies"
        run: "composer update --no-interaction --no-progress --no-suggest --prefer-dist"

      - name: "Coding Standard"
        run: "make cs"

      - name: "PHPStan"
        run: "make phpstan"

  tests:
    name: "Tests"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        php-version:
          - "7.2"
          - "7.3"
          - "7.4"
        operating-system: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@1.8.2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies"
        uses: "actions/cache@v1.1.2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies"
        run: "composer update --no-interaction --no-progress --no-suggest --prefer-dist"

      - name: "Tests"
        run: "make tests"

  tests-code-coverage:
    name: "Tests with code coverage"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        php-version:
          - "7.4"
        operating-system: [ubuntu-latest]

    if: "github.ref == 'master' && github.event == 'push'"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@1.8.2"
        with:
          coverage: "pcov"
          php-version: "${{ matrix.operating-system }}"

      - name: "Cache dependencies"
        uses: "actions/cache@v1.1.2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies"
        run: "composer update --no-interaction --no-progress --no-suggest --prefer-dist"

      - name: "Tests"
        run: "make coverage-clover"

      - name: "Coveralls.io"
        env:
          COVERALLS_REPO_TOKEN: "${{ secrets.COVERALLS_REPO_TOKEN }}"
        run: |
          wget https://github.com/php-coveralls/php-coveralls/releases/download/v2.1.0/php-coveralls.phar
          php php-coveralls.phar --verbose --config tests/.coveralls.yml

  tests-lowest-dependencies:
    name: "Tests with lowest dependencies"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        php-version:
          - "7.2"
        operating-system: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@1.8.2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"

      - name: "Cache dependencies"
        uses: "actions/cache@v1.1.2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies"
        run: "composer update --no-interaction --no-progress --no-suggest --prefer-dist --prefer-lowest"

      - name: "Tests"
        run: "make tests"
